'''
File: /randomize_pth.py
Created Date: Saturday December 2nd 2023
Author: Zihan
-----
Last Modified: Saturday, 2nd December 2023 10:58:53 pm
Modified By: the developer formerly known as Zihan at <wzh4464@gmail.com>
-----
HISTORY:
Date      		By   	Comments
----------		------	---------------------------------------------------------
'''

import torch

# 载入模型参数
model_path = 'task_adapting/checkpoints/vit-b-22k-w-head.pth'
model_parameters = torch.load(model_path, map_location=torch.device('cpu'))

# # 打印model_parameters的类型
# print(type(model_parameters))  # <class 'dict'>

# # 打印model_parameters的键
# print(model_parameters.keys())  # dict_keys(['state_dict', 'epoch'])

# # 打印epoch
# print(model_parameters['epoch'])  # 192

# # 打印state_dict的类型
# # <class 'collections.OrderedDict'>
# print(type(model_parameters['state_dict']))

# # 打印state_dict的键
# for key in model_parameters['state_dict'].keys():
#     print(key)

# '''
# pad_up
# pad_down
# pad_left
# pad_right
# '''

# # 打印state_dict的值
# for value in model_parameters['state_dict'].values():
#     print(value)

# tensor([[[[-1.6489e-01,  7.6318e-01,  1.8355e+00,  ...,  1.2992e+00,
#             7.1345e-01, -3.4687e-01],
#           [-1.1244e+00,  2.8104e-01, -1.0647e+00,  ...,  3.4687e-01,
#            -7.4886e-01, -1.0630e+00],
#           [-2.7252e-01,  2.4321e-01,  2.3464e-01,  ...,  2.1799e+00,
#             8.2396e-01, -3.2805e-01],
#           ...,
#           [ 1.2268e+00,  4.6480e-01,  1.6827e-03,  ...,  4.8264e-01,
#             7.2467e-01,  1.3335e-01],
#           [-6.1309e-02, -5.9019e-01,  1.5256e+00,  ...,  8.0539e-01,
#            -1.8004e+00,  4.1532e-01],
#           [ 1.6899e+00,  3.2070e-01,  5.4074e-01,  ..., -1.4134e+00,
#            -2.4797e-03,  3.8247e-01]],

#          [[-1.7853e-01, -4.8319e-01,  5.5992e-01,  ...,  3.9498e-02,
#            -4.2020e-01,  1.3520e+00],
#           [-4.4126e-01,  5.0664e-01, -1.1420e-01,  ..., -5.4669e-02,
#            -9.8877e-01, -4.3394e-01],
#           [-2.4344e+00, -4.3300e-01,  8.3773e-01,  ...,  2.9472e-01,
#            -5.3535e-01,  1.1537e+00],
#           ...,
#           [ 5.5185e-01,  1.4190e+00,  5.8792e-01,  ...,  3.2206e-01,
#             7.9262e-01,  9.5625e-01],
#           [ 1.2196e+00,  1.2631e+00,  9.0062e-01,  ..., -2.6984e-01,
#             1.1521e+00,  2.0013e+00],
#           [-6.3061e-01,  7.4475e-01, -7.4074e-01,  ..., -1.2388e-01,
#             1.6770e+00, -7.4647e-01]],

#          [[ 1.1162e-01,  5.6135e-02,  2.1947e-01,  ...,  5.8261e-01,
#            -1.0114e+00, -9.9128e-01],
#           [ 4.7961e-01,  1.0696e+00,  5.7884e-01,  ..., -1.0816e-01,
#            -7.2574e-01, -2.2255e-01],
#           [-4.6367e-01,  8.3324e-01,  3.1183e-03,  ...,  1.4786e-01,
#            -6.7483e-01, -5.3488e-01],
#           ...,
#           [ 4.8799e-01, -3.3868e-01,  1.3660e+00,  ..., -3.8620e-02,
#             1.2588e+00, -1.1029e+00],
#           [-3.7643e-01,  1.9045e+00, -6.1288e-01,  ...,  1.4777e-01,
#            -5.1790e-01,  1.4153e+00],
#           [ 1.6647e+00,  2.7375e-01,  2.6514e-01,  ...,  5.2313e-01,
#            -6.5846e-01,  3.1516e-01]]]])
# tensor([[[[ 0.4386,  0.0036, -1.1672,  ..., -1.2720, -1.0354,  0.6802],
#           [-0.0855,  0.3044, -1.2581,  ..., -0.5356, -0.4194,  0.6271],
#           [-0.7681,  0.4206, -0.6933,  ...,  1.5182, -0.2702,  0.2037],
#           ...,
#           [-0.6244, -1.0222, -1.2458,  ..., -0.9428, -0.1407, -0.3545],
#           [ 0.5722,  0.5745, -0.7977,  ..., -0.2273,  0.8067, -0.1638],
#           [-0.0110,  0.2047, -0.8959,  ..., -0.0644, -0.4418,  0.6246]],

#          [[-0.4240,  0.2768, -0.2534,  ...,  1.5503, -0.3874,  0.0450],
#           [ 0.0284, -0.7665, -0.4686,  ...,  0.6657, -0.2263,  0.5442],
#           [-0.9364,  0.2777, -0.2934,  ...,  0.2653, -0.3869, -0.6704],
#           ...,
#           [-0.0628,  0.6538, -0.9183,  ...,  1.8005,  1.4337, -0.3648],
#           [-0.7698,  0.8567,  0.1778,  ..., -1.3390,  0.5058,  0.7870],
#           [-1.7077, -0.4192, -0.3705,  ..., -0.6809, -0.1982,  0.8682]],

#          [[ 0.4184,  1.0242,  0.3602,  ..., -0.7699,  0.6618,  1.0795],
#           [-1.6536,  0.5647, -0.5950,  ..., -0.6571,  0.6095,  0.2241],
#           [-1.3393, -0.7940, -0.8224,  ...,  0.9999, -2.6204, -1.6797],
#           ...,
#           [ 0.5301, -0.2474,  0.5298,  ...,  0.6505, -1.2304,  0.3200],
#           [ 0.6438,  0.2400,  0.2111,  ..., -0.3758, -0.8270, -0.1621],
#           [ 0.6082, -0.1775,  1.3419,  ...,  0.0696,  0.1941, -0.8392]]]])
# tensor([[[[ 0.5097,  0.8019,  0.1701,  ...,  0.2974, -0.5701, -0.0798],
#           [ 1.0649, -0.1789,  0.8326,  ..., -0.2485,  0.2917,  1.6459],
#           [ 0.5989,  0.7145, -0.9701,  ..., -0.5581,  0.0275,  1.1316],
#           ...,
#           [-0.9635,  0.3102,  0.5962,  ...,  2.0079, -0.0806, -1.2596],
#           [-0.2276, -0.3320, -0.8552,  ...,  0.8450, -0.0942,  0.0379],
#           [-0.0202, -0.0035, -1.2736,  ...,  0.2786, -2.2458,  0.1757]],

#          [[-1.2003,  0.0949,  0.3074,  ...,  0.0392, -0.2108,  0.0658],
#           [ 0.0614, -0.6726,  0.1127,  ..., -0.1028, -1.2343, -1.2845],
#           [-1.1905, -1.0533, -0.0624,  ...,  1.5020, -0.8974,  0.1910],
#           ...,
#           [-0.1601,  0.1257,  0.1912,  ...,  1.0095, -0.0709,  0.7172],
#           [-1.8731,  0.7173, -0.8064,  ..., -1.0725, -0.5701,  0.2061],
#           [ 0.4031, -0.0458, -0.6122,  ..., -0.2936,  0.8385,  0.5737]],

#          [[-0.3799,  0.3576,  2.3472,  ..., -0.8925,  1.4059,  2.0230],
#           [ 0.4358, -0.9962,  0.5213,  ...,  1.3276,  1.5398,  0.9813],
#           [ 0.4831,  1.0283,  0.9319,  ...,  1.2148,  0.1486,  0.5674],
#           ...,
#           [-0.5887,  0.4871, -0.9000,  ..., -0.1057, -0.8153, -1.4154],
#           [-0.9383,  0.3048, -1.0630,  ...,  0.9849,  0.0337,  1.3159],
#           [ 1.1387, -0.2928,  0.9926,  ..., -0.3822,  1.0171,  0.6201]]]])
# tensor([[[[-0.8398, -0.3530, -0.5551,  ...,  0.0576,  0.4308, -1.3881],
#           [-0.5826,  0.8091,  0.8416,  ...,  0.4243,  0.0238, -0.4819],
#           [-1.7622, -0.6900,  0.1795,  ..., -1.2008,  1.1560,  1.7203],
#           ...,
#           [ 0.2536,  0.1070, -0.3614,  ...,  0.4486, -0.8612, -0.2451],
#           [-0.7323, -0.8414, -0.5383,  ..., -1.7920,  0.8399,  0.4278],
#           [-1.5753, -0.3870,  0.9574,  ..., -1.1855, -1.0668,  0.5534]],

#          [[-0.3342, -0.9664, -0.3909,  ...,  0.2853, -0.0975,  0.0465],
#           [ 0.8184,  0.1923, -0.5621,  ..., -0.5798, -1.3812,  0.0491],
#           [ 2.1471, -1.3395, -1.2279,  ...,  1.0088,  0.1878, -0.1745],
#           ...,
#           [ 0.8911, -0.0088,  0.4874,  ...,  0.4786, -1.3396,  0.5755],
#           [ 0.6790,  1.4058, -0.7777,  ...,  0.0895, -1.6073, -1.9153],
#           [-0.5011,  0.2227, -0.5245,  ..., -0.6469, -0.0035,  0.5830]],

#          [[-0.5547, -0.2432,  0.1941,  ..., -0.4281, -0.2130, -0.2832],
#           [-0.6828, -1.1747, -0.5537,  ..., -0.5127,  0.7189,  1.6279],
#           [-1.2815,  0.0738,  0.1033,  ...,  0.0474, -0.4531, -1.1609],
#           ...,
#           [ 0.9723,  0.3402, -0.4488,  ..., -0.5893, -0.1948,  1.2343],
#           [-0.0964,  1.2956,  1.5204,  ...,  0.9308, -0.1368, -1.5145],
#           [-0.9194, -0.6712, -0.1053,  ..., -0.2721,  0.2823,  0.0915]]]])

# 重新随机初始化所有的参数
for key in model_parameters['state_dict'].keys():
    print(model_parameters['state_dict'][key].shape)
    shape = model_parameters['state_dict'][key].shape
    model_parameters['state_dict'][key] = torch.randn(shape)
    
# save_path = 'task_adapting/checkpoints/vit-b-22k-wo-head.pth'
torch.save(model_parameters, 'task_adapting/checkpoints/vit-b-22k-wo-head.pth')

# for i, key in model_parameters['state_dict'].keys():
#     model_parameters['state_dict'][key] = torch.randn(shape[i])